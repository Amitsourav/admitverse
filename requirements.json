{
  "name": "AdmitVerse Requirements",
  "description": "System requirements and dependencies for AdmitVerse application",
  "lastUpdated": "2024-08-30",
  "system": {
    "node": {
      "minimum": "18.17.0",
      "recommended": "20.x",
      "description": "Node.js runtime"
    },
    "npm": {
      "minimum": "9.0.0",
      "recommended": "9.8.1",
      "description": "Package manager"
    },
    "database": {
      "type": "PostgreSQL",
      "minimum": "13.0",
      "recommended": "15.x",
      "description": "Primary database"
    }
  },
  "services": {
    "required": [
      {
        "name": "PostgreSQL",
        "port": 5432,
        "database": "admitverse",
        "description": "Main database for storing application data"
      }
    ],
    "optional": [
      {
        "name": "Supabase",
        "description": "For file storage (if SUPABASE_URL is configured)"
      },
      {
        "name": "OpenAI API",
        "description": "For AI features (if OPENAI_API_KEY is configured)"
      },
      {
        "name": "Resend",
        "description": "For email services (if RESEND_API_KEY is configured)"
      }
    ]
  },
  "environment": {
    "required": [
      {
        "name": "DATABASE_URL",
        "example": "postgresql://localhost:5432/admitverse",
        "description": "PostgreSQL connection string"
      },
      {
        "name": "JWT_SECRET",
        "example": "your-secret-key-here",
        "description": "Secret key for JWT token generation"
      },
      {
        "name": "NEXT_PUBLIC_APP_URL",
        "example": "http://localhost:3000",
        "description": "Application URL"
      }
    ],
    "optional": [
      {
        "name": "SUPABASE_URL",
        "description": "Supabase project URL for file storage"
      },
      {
        "name": "SUPABASE_SERVICE_KEY",
        "description": "Supabase service key"
      },
      {
        "name": "OPENAI_API_KEY",
        "description": "OpenAI API key for AI features"
      },
      {
        "name": "RESEND_API_KEY",
        "description": "Resend API key for email services"
      }
    ]
  },
  "dependencies": {
    "production": [
      "@prisma/client",
      "next",
      "react",
      "react-dom",
      "@trpc/server",
      "@trpc/client",
      "@trpc/react-query",
      "@tanstack/react-query",
      "bcrypt",
      "jsonwebtoken",
      "zod"
    ],
    "development": [
      "prisma",
      "typescript",
      "@types/node",
      "@types/react",
      "tailwindcss",
      "eslint",
      "prettier"
    ]
  },
  "ports": {
    "development": {
      "app": 3000,
      "database": 5432
    },
    "production": {
      "app": "${PORT}",
      "database": "${DATABASE_PORT}"
    }
  }
}